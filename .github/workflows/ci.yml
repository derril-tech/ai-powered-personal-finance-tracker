# Created automatically by Cursor AI (2025-08-28)

name: CI

on:
  pull_request:
  push:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.versions.outputs.node }}
      python-version: ${{ steps.versions.outputs.python }}
    steps:
      - uses: actions/checkout@v4
      - id: versions
        run: |
          echo "node=20" >> $GITHUB_OUTPUT
          echo "python=3.11" >> $GITHUB_OUTPUT

  api:
    name: API (NestJS)
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'npm'
      - name: Install deps
        run: |
          npm ci --ignore-scripts
      - name: Lint API
        run: |
          npm run -w apps/api lint || echo "lint warnings"
      - name: Typecheck API
        run: |
          npm run -w apps/api typecheck || echo "typecheck warnings"
      - name: Test API
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        run: |
          npm run -w apps/api test -- --ci --reporters=default --reporters=jest-junit || true
      - name: Build API
        run: |
          npm run -w apps/api build

  frontend:
    name: Frontend (Next.js)
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'npm'
      - name: Install deps
        run: |
          npm ci --ignore-scripts
      - name: Lint Frontend
        run: |
          npm run -w apps/frontend lint || echo "lint warnings"
      - name: Typecheck Frontend
        run: |
          npm run -w apps/frontend typecheck || echo "typecheck warnings"
      - name: Test Frontend
        run: |
          npm run -w apps/frontend test -- --ci || true
      - name: Build Frontend
        run: |
          npm run -w apps/frontend build

  docker:
    name: Docker build & scan
    needs: [api, frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build API image
        run: |
          docker build -t finance-tracker-api:ci -f apps/api/Dockerfile .
      - name: Build Frontend image
        run: |
          docker build -t finance-tracker-frontend:ci -f apps/frontend/Dockerfile .
      - name: Scan images (Trivy)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'finance-tracker-api:ci'
          format: 'sarif'
          output: 'trivy-api.sarif'
      - name: Upload Trivy SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-api.sarif
